<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>My Stylish Portfolio</title>

  <!-- Google Fonts + FontAwesome -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

  <style>
    /* Reset & base */
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
      color: #333;
      line-height: 1.6;
      transition: background-color 0.4s, color 0.4s;
    }

    body.dark-mode {
      background: #121212;
      color: #eee;
    }

    body.dark-mode header,
    body.dark-mode nav,
    body.dark-mode footer,
    body.dark-mode .container {
      background: #1e1e1e;
      color: #ddd;
      box-shadow: none;
    }

    body.dark-mode nav a {
      color: #bbb;
    }

    body.dark-mode nav a.active,
    body.dark-mode nav a:hover {
      background-color: #444;
      color: #ffcc00;
      border-bottom-color: #ffcc00;
    }

    body.dark-mode #projects ul li {
      background: #2a2a2a;
      color: #eee;
      box-shadow: 0 2px 6px rgba(255 204 0 / 0.2);
    }

    body.dark-mode #contact button {
      background-color: #444;
      box-shadow: 0 4px 12px rgba(255 204 0, 0.8);
    }

    body.dark-mode #contact button:hover {
      background-color: #ffcc00;
      color: #222;
    }


    /* Container */
    .container {
      max-width: 1000px;
      margin: 40px auto;
      background: white;
      border-radius: 12px;
      box-shadow: 0 10px 25px rgba(0,0,0,0.15);
      overflow: hidden;
      padding-bottom: 40px;
    }

    /* Header */
    header {
      background: #3b40a4;
      color: white;
      padding: 40px 20px;
      text-align: center;
      font-size: 2.8rem;
      font-weight: 900;
      letter-spacing: 2px;
      text-transform: uppercase;
      user-select: none;
    }

    /* Navigation */
    nav {
      display: flex;
      justify-content: center;
      background: #f7f7f7;
      border-bottom: 1px solid #ddd;
      position: sticky;
      top: 0;
      z-index: 1000;
    }
    nav a {
      color: #555;
      text-decoration: none;
      padding: 15px 25px;
      font-weight: 600;
      font-size: 1.1rem;
      transition: background-color 0.3s ease, color 0.3s ease;
      border-bottom: 3px solid transparent;
    }
    nav a:hover,
    nav a.active {
      background-color: #3b40a4;
      color: white;
      border-bottom: 3px solid #ffcc00;
    }

    /* Sections */
    main {
      padding: 40px 30px;
    }
    section {
      margin-bottom: 50px;
      opacity: 0;
      transform: translateY(30px);
      transition: opacity 0.6s ease, transform 0.6s ease;
    }
    section.visible {
      opacity: 1;
      transform: translateY(0);
    }

    section h2 {
      font-size: 2rem;
      margin-bottom: 20px;
      color: #3b40a4;
      border-left: 5px solid #ffcc00;
      padding-left: 10px;
    }

    /* About Me */
    #about p {
      font-size: 1.2rem;
      max-width: 700px;
      margin-bottom: 20px;
      color: #555;
    }

    /* Projects */
    #projects ul {
      list-style: none;
      max-width: 700px;
      margin-left: 0;
      padding-left: 0;
    }
    #projects ul li {
      background: #f0f0f0;
      margin-bottom: 15px;
      padding: 15px 20px;
      border-radius: 8px;
      font-weight: 600;
      color: #333;
      box-shadow: 0 2px 6px rgba(0,0,0,0.05);
      transition: transform 0.3s ease;
      cursor: default;
    }
    #projects ul li:hover {
      transform: translateX(5px);
      box-shadow: 0 6px 12px rgba(0,0,0,0.15);
    }

    /* Skills */
    #skills .skill {
      margin-bottom: 20px;
      max-width: 700px;
    }
    #skills .skill-name {
      font-weight: 600;
      margin-bottom: 6px;
      color: #3b40a4;
    }
    #skills .skill-bar {
      background: #ddd;
      border-radius: 20px;
      overflow: hidden;
      height: 20px;
    }
    #skills .skill-level {
      height: 100%;
      background: #ffcc00;
      width: 0;
      border-radius: 20px;
      transition: width 1.5s ease;
    }

    /* Contact */
    #contact button {
      background-color: #3b40a4;
      color: white;
      border: none;
      padding: 15px 25px;
      border-radius: 30px;
      font-size: 1.1rem;
      cursor: pointer;
      transition: background-color 0.3s ease;
      box-shadow: 0 4px 12px rgba(59, 64, 164, 0.6);
    }
    #contact button:hover {
      background-color: #2a2e77;
    }
    #email {
      margin-top: 20px;
      font-weight: 700;
      font-size: 1.2rem;
      color: #3b40a4;
      user-select: text;
      display: none;
    }

    /* Contact Form */
    form {
      max-width: 700px;
      display: flex;
      flex-direction: column;
      gap: 15px;
    }
    form input, form textarea {
      padding: 12px 15px;
      border-radius: 8px;
      border: 1px solid #ccc;
      font-size: 1rem;
      resize: vertical;
      transition: border-color 0.3s ease;
    }
    form input:focus, form textarea:focus {
      border-color: #3b40a4;
      outline: none;
    }
    form button {
      width: 150px;
      align-self: flex-start;
      background-color: #3b40a4;
      color: white;
      border: none;
      padding: 12px 0;
      border-radius: 30px;
      font-size: 1.1rem;
      cursor: pointer;
      transition: background-color 0.3s ease;
      box-shadow: 0 4px 12px rgba(59, 64, 164, 0.6);
    }
    form button:hover {
      background-color: #2a2e77;
    }
    .error-message {
      color: red;
      font-size: 0.9rem;
      font-weight: 600;
    }

    /* Footer */
    footer {
      text-align: center;
      padding: 25px 0;
      background-color: #3b40a4;
      color: white;
      font-weight: 600;
      font-size: 1rem;
      user-select: none;
      letter-spacing: 1px;
      margin-top: 20px;
    }

    /* Dark Mode toggle button */
    #darkModeToggle {
      position: fixed;
      top: 15px;
      right: 15px;
      background:#3b40a4;
      border:none;
      color:white;
      padding:10px 15px;
      border-radius:50px;
      cursor:pointer;
      box-shadow: 0 4px 10px rgba(59,64,164,0.7);
      z-index: 9999;
      font-size: 1.2rem;
    }
    #darkModeToggle:hover {
      background-color: #2a2e77;
    }

    /* Back to top button */
    #backToTop {
      position: fixed;
      bottom: 30px;
      right: 30px;
      background-color: #3b40a4;
      color: white;
      border: none;
      border-radius: 50%;
      width: 45px;
      height: 45px;
      font-size: 22px;
      cursor: pointer;
      box-shadow: 0 4px 12px rgba(59, 64, 164, 0.7);
      display: none;
      align-items: center;
      justify-content: center;
      z-index: 9999;
      transition: background-color 0.3s ease;
    }
    #backToTop:hover {
      background-color: #2a2e77;
    }
  </style>
</head>
<body>

  <button id="darkModeToggle" aria-label="Toggle Dark Mode">
    <i class="fa-solid fa-moon"></i>
  </button>

  <header>MY STYLISH PORTFOLIO</header>

  <nav id="navbar">
    <a href="#about" class="active">About Me</a>
    <a href="#projects">Projects</a>
    <a href="#skills">Skills</a>
    <a href="#contact">Contact</a>
  </nav>

  <main>
    <section id="about">
      <h2>About Me</h2>
      <p>Hello! I'm a passionate developer dedicated to crafting beautiful and efficient websites. I love learning new technologies and creating impactful projects.</p>
    </section>

    <section id="projects">
      <h2>Projects</h2>
      <ul>
        <li>Portfolio Website - Built with HTML, CSS, and JS</li>
        <li>Todo App - React-based task manager</li>
        <li>Weather App - API integration with dynamic UI</li>
      </ul>
    </section>

    <section id="skills">
      <h2>Skills</h2>
      <div class="skill">
        <div class="skill-name">HTML</div>
        <div class="skill-bar"><div class="skill-level" data-level="90%"></div></div>
      </div>
      <div class="skill">
        <div class="skill-name">CSS</div>
        <div class="skill-bar"><div class="skill-level" data-level="85%"></div></div>
      </div>
      <div class="skill">
        <div class="skill-name">JavaScript</div>
        <div class="skill-bar"><div class="skill-level" data-level="80%"></div></div>
      </div>
      <div class="skill">
        <div class="skill-name">React</div>
        <div class="skill-bar"><div class="skill-level" data-level="70%"></div></div>
      </div>
    </section>

    <section id="contact">
      <h2>Contact Me</h2>
      <form id="contactForm" novalidate>
        <input type="text" id="name" name="name" placeholder="Your Name" required />
        <input type="email" id="emailInput" name="email" placeholder="Your Email" required />
        <textarea id="message" name="message" rows="5" placeholder="Your Message" required></textarea>
        <button type="submit">Send</button>
        <p id="email" aria-live="polite">your.email@example.com</p>
        <p class="error-message" id="errorMsg"></p>
      </form>
    </section>
  </main>

  <footer>Â© 2025 My Stylish Portfolio</footer>

  <button id="backToTop" aria-label="Back to Top"><i class="fa-solid fa-arrow-up"></i></button>

  <script>
    // Dark Mode toggle
    const darkModeToggle = document.getElementById('darkModeToggle');
    darkModeToggle.addEventListener('click', () => {
      document.body.classList.toggle('dark-mode');
      const icon = darkModeToggle.querySelector('i');
      if(document.body.classList.contains('dark-mode')) {
        icon.classList.replace('fa-moon', 'fa-sun');
      } else {
        icon.classList.replace('fa-sun', 'fa-moon');
      }
    });

    // Smooth Scroll + Scrollspy
    const navLinks = document.querySelectorAll('nav a');
    const sections = document.querySelectorAll('main section');

    navLinks.forEach(link => {
      link.addEventListener('click', e => {
        e.preventDefault();
        const targetID = link.getAttribute('href').slice(1);
        const targetSection = document.getElementById(targetID);
        window.scrollTo({
          top: targetSection.offsetTop - 60,
          behavior: 'smooth'
        });
      });
    });

    window.addEventListener('scroll', () => {
      let current = '';
      sections.forEach(section => {
        const sectionTop = section.offsetTop - 70;
        if(window.scrollY >= sectionTop) {
          current = section.getAttribute('id');
        }
      });

      navLinks.forEach(link => {
        link.classList.remove('active');
        if(link.getAttribute('href').slice(1) === current) {
          link.classList.add('active');
        }
      });

      // Show Back to Top button
      const backToTop = document.getElementById('backToTop');
      if(window.scrollY > 300) {
        backToTop.style.display = 'flex';
      } else {
        backToTop.style.display = 'none';
      }
    });

    // Back to Top button click
    document.getElementById('backToTop').addEventListener('click', () => {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    });

    // Scroll animations (fade-in)
    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if(entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    }, { threshold: 0.3 });

    sections.forEach(section => {
      observer.observe(section);
    });

    // Skills bar animation on scroll
    function animateSkills() {
      const skills = document.querySelectorAll('.skill-level');
      skills.forEach(skill => {
        const level = skill.getAttribute('data-level');
        skill.style.width = level;
      });
    }
    // Trigger skills animation when Skills section visible
    observer.observe(document.getElementById('skills'));
    animateSkills();

    // Contact form validation
    const form = document.getElementById('contactForm');
    const errorMsg = document.getElementById('errorMsg');
    form.addEventListener('submit', e => {
      e.preventDefault();
      errorMsg.textContent = '';
      const name = form.name.value.trim();
      const email = form.email.value.trim();
      const message = form.message.value.trim();
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      if(name === '' || email === '' || message === '') {
        errorMsg.textContent = 'Please fill in all fields.';
        return;
      }
      if(!emailRegex.test(email)) {
        errorMsg.textContent = 'Please enter a valid email address.';
        return;
      }
      alert('Thank you for your message, ' + name + '! I will get back to you soon.');
      form.reset();
    });
  </script>
</body>
</html>
